# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: s3origin.awsblueprints.io
  labels:
    awsblueprints.io/environment: dev
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XCDN
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  mode: Pipeline
  pipeline:
  - functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      environment: null
      kind: Resources
      patchSets:
      - name: common-fields
        patches:
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          type: FromCompositeFieldPath
      resources:
      - base:
          apiVersion: cloudfront.aws.crossplane.io/v1alpha1
          kind: Distribution
          spec:
            forProvider:
              distributionConfig:
                comment: example cloudfront distribution
                defaultCacheBehavior:
                  forwardedValues:
                    cookies:
                      forward: none
                    queryString: false
                  minTTL: 0
                  targetOriginID: s3Origin
                  viewerProtocolPolicy: redirect-to-https
                defaultRootObject: index.html
                enabled: true
                origins:
                  items:
                  - domainName: to-be-patched
                    id: s3Origin
                    s3OriginConfig:
                      originAccessIdentity: to-be-patched
        name: distribution
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: metadata.uid
          toFieldPath: spec.publishConnectionDetailsTo.name
          transforms:
          - string:
              fmt: '%s-distribution'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: status.oaiId
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.distributionConfig.origins.items[0].s3OriginConfig.originAccessIdentity
          transforms:
          - string:
              fmt: origin-access-identity/cloudfront/%s
              type: Format
            type: string
          type: FromCompositeFieldPath
        - combine:
            strategy: string
            string:
              fmt: '%s.s3.%s.amazonaws.com'
            variables:
            - fromFieldPath: status.bucketName
            - fromFieldPath: spec.resourceConfig.region
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.distributionConfig.origins.items[0].domainName
          type: CombineFromComposite
      - base:
          apiVersion: cloudfront.aws.crossplane.io/v1alpha1
          kind: CloudFrontOriginAccessIdentity
          spec:
            forProvider:
              cloudFrontOriginAccessIdentityConfig:
                comment: example OAI
        name: oai
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: metadata.uid
          toFieldPath: spec.publishConnectionDetailsTo.name
          transforms:
          - string:
              fmt: '%s-oai'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: status.atProvider.cloudFrontOriginAccessIdentity.id
          toFieldPath: status.oaiId
          type: ToCompositeFieldPath
      - base:
          apiVersion: s3.aws.crossplane.io/v1alpha3
          kind: BucketPolicy
          spec:
            forProvider:
              bucketNameSelector:
                matchControllerRef: true
              rawPolicy: to-be-patched
        name: bucket-policy
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: metadata.uid
          toFieldPath: spec.publishConnectionDetailsTo.name
          transforms:
          - string:
              fmt: '%s-bucket-policy'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - combine:
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity %s"
                        },
                        "Action": "s3:GetObject",
                        "Resource": "%s/*"
                    }
                  ]
                }
            variables:
            - fromFieldPath: status.oaiId
            - fromFieldPath: status.bucketArn
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.rawPolicy
          type: CombineFromComposite
      - base:
          apiVersion: s3.aws.crossplane.io/v1beta1
          kind: Bucket
          spec:
            deletionPolicy: Delete
            forProvider:
              acl: private
              serverSideEncryptionConfiguration:
                rules:
                - applyServerSideEncryptionByDefault:
                    sseAlgorithm: AES256
        name: s3-bucket
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: spec.resourceConfig.tags
          policy:
            mergeOptions:
              appendSlice: true
              keepMapValues: true
          toFieldPath: spec.forProvider.tagging.tagSet
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.locationConstraint
          type: FromCompositeFieldPath
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.bucketName
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.arn
          toFieldPath: status.bucketArn
          type: ToCompositeFieldPath
        - fromFieldPath: metadata.uid
          toFieldPath: spec.publishConnectionDetailsTo.name
          transforms:
          - string:
              fmt: '%s-bucket'
              type: Format
            type: string
          type: FromCompositeFieldPath
    step: patch-and-transform
  - step: automatically-detect-ready-composed-resources
    functionRef:
      name: function-auto-ready